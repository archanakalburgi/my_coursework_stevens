test <- bc_clean[index,]
fit <- randomForest(Class~., data=training, importance=TRUE, ntree=1000)
importance(fit)
varImpPlot(fit)
Prediction <- predict(fit, test)
table(actual=test[,10],Prediction)
wrong<- (test[,10]!=Prediction )
error_rate<-sum(wrong)/length(wrong)
error_rate
rm(list=ls())
rm(list=ls())
install.packages("rpart")
install.packages("rpart")
install.packages("rpart.plot")     # Enhanced tree plots
install.packages("rattle")         # Fancy tree plot
install.packages("RColorBrewer")   # colors needed for rattle
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
filename<-file.choose()
bc <-  read.csv(filename )
View(bc)
set.seed(111) # sets the random sample sequence
# 25% test data , remaining as test data
index<-sort(sample(nrow(bc),round(.25*nrow(bc))))
training<-bc[-index,]
test<-bc[index,]
CART_class<-rpart(Class~.,data=training)
rpart.plot(CART_class) # we get different plot everytime, because random sample is taken
CART_predict2<-predict(CART_class,test, type="class") # classification model  -> CART_class
table(Actual=test[,11],CART=CART_predict2)
CART_predict<-predict(CART_class,test) # probability of survival or not survival
CART_predict<-predict(CART_class,test)
str(CART_predict)
CART_predict_cat<-ifelse(CART_predict[,1]<=.5,'Yes','No') # if 1st column of probability is < 50 then the person survived else person didn't
View(bc)
CART_predict<-predict(CART_class,test)
str(CART_predict)
CART_predict_cat<-ifelse(CART_predict[,1]<=.5,'2','4') # if 1st column of probability is < 50 then the person survived else person didn't
table(Actual=test[,11],CART=CART_predict_cat)
CART_wrong<-sum(test[,11]!=CART_predict_cat) # number of incorrectly classified
CART_error_rate<-CART_wrong/length(test[,11])
CART_error_rate
CART_predict2<-predict(CART_class,test, type="class")
CART_wrong2<-sum(test[,11]!=CART_predict2)
CART_error_rate2<-CART_wrong2/length(test[,11])
CART_error_rate2
library(rpart.plot)
prp(CART_class)
fancyRpartPlot(CART_class)
rm(list=ls())
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
filename<-file.choose()
dsn<-  read.csv(filename )
View(dsn)
attach(dsn)
set.seed(111) # sets the random sample sequence
?ifelse
# 25% test data , remaining as test data
index<-sort(sample(nrow(dsn),round(.25*nrow(dsn))))
training<-dsn[-index,]
test<-dsn[index,]
?rpart()
#Grow the tree
dev.off()
CART_class<-rpart( Survived~.,data=training)
rpart.plot(CART_class) # we get different plot everytime, because random sample is taken
CART_predict2<-predict(CART_class,test, type="class") # classification model  -> CART_class
table(Actual=test[,4],CART=CART_predict2)
CART_predict<-predict(CART_class,test) # probability of survival or not survival
CART_predict<-predict(CART_class,test)
str(CART_predict)
CART_predict_cat<-ifelse(CART_predict[,1]<=.5,'Yes','No') # if 1st column of probability is < 50 then the person survived else person didn't
table(Actual=test[,4],CART=CART_predict_cat)
CART_wrong<-sum(test[,4]!=CART_predict_cat) # number of incorrectly classifed
CART_error_rate<-CART_wrong/length(test[,4])
CART_error_rate
CART_predict2<-predict(CART_class,test, type="class")
CART_wrong2<-sum(test[,4]!=CART_predict2)
CART_error_rate2<-CART_wrong2/length(test[,4])
CART_error_rate2
library(rpart.plot)
prp(CART_class)
# much fancier graph
fancyRpartPlot(CART_class)
predict
?predict()
rm(list=ls())
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
filename<-file.choose()
bc <-  read.csv(filename )
View(bc)
attach(bc)
set.seed(111) # sets the random sample sequence
# 25% test data , remaining as test data
index<-sort(sample(nrow(bc),round(.25*nrow(bc))))
training<-bc[-index,]
test<-bc[index,]
CART_class<-rpart(Class~.,data=training)
rpart.plot(CART_class) # we get different plot everytime, because random sample is taken
CART_class<-rpart(Class~.,data=training)
rpart.plot(CART_class) # we get different plot everytime, because random sample is taken
CART_predict2<-predict(CART_class,test, type="class") # classification model  -> CART_class
CART_predict<-predict(CART_class,test)
str(CART_predict)
CART_predict_cat<-ifelse(CART_predict[,2]<=.5,'2','4') # if 1st column of probability is < 50 then the person survived else person didn't
#########################################################
##  Step 0: Clear the environment
##
##
#########################################################
rm(list=ls())
rm(list=ls())
install.packages("rpart")
install.packages("rpart")
install.packages("rpart.plot")     # Enhanced tree plots
install.packages("rattle")         # Fancy tree plot
install.packages("RColorBrewer")   # colors needed for rattle
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
filename<-file.choose()
bc <-  read.csv(filename )
View(bc)
attach(bc)
set.seed(111) # sets the random sample sequence
# 25% test data , remaining as test data
index<-sort(sample(nrow(bc),round(.25*nrow(bc))))
training<-bc[-index,]
test<-bc[index,]
CART_class<-rpart(Class~.,data=training)
rpart.plot(CART_class) # we get different plot everytime, because random sample is taken
CART_predict2<-predict(CART_class,test, type="class") # classification model  -> CART_class
bc$F6 <- factor(bc$F6)
CART_class<-rpart(Class~.,data=training)
rm(list=ls())
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
filename<-file.choose()
bc <-  read.csv(filename, stringAsFactors=TRUE)
rm(list=ls())
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
filename<-file.choose()
bc <-  read.csv(filename) #, stringAsFactors=TRUE)
rm(list=ls())
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
filename<-file.choose()
bc <-  read.table(filename, sep = ",") #stringAsFactors=TRUE)
View(bc)
rm(list=ls())
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
filename<-file.choose()
bc <-  read.csv(filename) # sep = ",") #stringAsFactors=TRUE)
View(bc)
attach(bc)
rm(list=ls())
filename<-file.choose()
bc <-  read.csv(filename ,  stringAsFactors=TRUE)
bc <-  read.csv(filename ,  stringsAsFactors=TRUE)
View(bc)
attach(bc)
set.seed(111) # sets the random sample sequence
# 25% test data , remaining as test data
index<-sort(sample(nrow(bc),round(.25*nrow(bc))))
training<-bc[-index,]
test<-bc[index,]
bc$F6 <- factor(bc$F6)
CART_class<-rpart(Class~.,data=training)
rpart.plot(CART_class) # we get different plot everytime, because random sample is taken
CART_predict2<-predict(CART_class,test, type="class") # classification model  -> CART_class
CART_predict2<-predict(CART_class,test, type="class") # classification model  -> CART_class
rpart.plot(CART_class) # we get different plot everytime, because random sample is taken
CART_predict2<-predict(CART_class,test) #, type="class") # classification model  -> CART_class
table(Actual=test[,11],CART=CART_predict2)
CART_predict<-predict(CART_class,test) # probability of survival or not survival
CART_predict<-predict(CART_class,test)
str(CART_predict)
CART_predict_cat<-ifelse(CART_predict[,2]<=.5,'2','4') # if 1st column of probability is < 50 then the person survived else person didn't
rm(list=ls())
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
filename<-file.choose()
bc <-  read.csv(filename ,  stringsAsFactors=TRUE)
View(bc)
attach(bc)
set.seed(111) # sets the random sample sequence
# 25% test data , remaining as test data
index<-sort(sample(nrow(bc),round(.25*nrow(bc))))
training<-bc[-index,]
test<-bc[index,]
bc_clean$F1 = factor(bc_clean$F1)
bc_clean$F2 = factor(bc_clean$F2)
bc_clean$F3 = factor(bc_clean$F3)
bc_clean$F4 = factor(bc_clean$F4)
bc_clean$F5 = factor(bc_clean$F5)
rm(list=ls())
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
filename<-file.choose()
bc <-  read.csv(filename ,  stringsAsFactors=TRUE)
View(bc)
attach(bc)
set.seed(111) # sets the random sample sequence
# 25% test data , remaining as test data
index<-sort(sample(nrow(bc),round(.25*nrow(bc))))
training<-bc[-index,]
test<-bc[index,]
bc$F1 = factor(bc$F1)
bc$F2 = factor(bc$F2)
bc$F3 = factor(bc$F3)
bc$F4 = factor(bc$F4)
bc$F5 = factor(bc$F5)
bc$F6 = factor(bc$F6)
bc$F7 = factor(bc$F7)
bc$F8 = factor(bc$F8)
bc$F9 = factor(bc$F9)
bc$Class = factor(bc$Class)
CART_class<-rpart(Class~.,data=training)
rpart.plot(CART_class) # we get different plot everytime, because random sample is taken
CART_predict2<-predict(CART_class,test) #, type="class") # classification model  -> CART_class
table(Actual=test[,11],CART=CART_predict2)
CART_predict<-predict(CART_class,test) # probability of survival or not survival
CART_predict<-predict(CART_class,test)
str(CART_predict)
CART_predict_cat<-ifelse(CART_predict[,2]<=.5,'2','4')
CART_predict2<-predict(CART_class,test, type="class") # classification model  -> CART_class
CART_class<-rpart(Class~.,data=training)
rpart.plot(CART_class) # we get different plot everytime, because random sample is taken
CART_predict2<-predict(CART_class,test, type="class") # classification model  -> CART_class
table(Actual=test[,11],CART=CART_predict2)
CART_predict<-predict(CART_class,test) # probability of survival or not survival
View(training)
bc$F1 = factor(bc$F1)
bc$F2 = factor(bc$F2)
bc$F3 = factor(bc$F3)
bc$F4 = factor(bc$F4)
bc$F5 = factor(bc$F5)
bc$F6 = factor(bc$F6)
bc$F7 = factor(bc$F7)
bc$F8 = factor(bc$F8)
bc$F9 = factor(bc$F9)
bc$Class = factor(bc$Class)
CART_class<-rpart(Class~.,data=training)
rpart.plot(CART_class) # we get different plot everytime, because random sample is taken
CART_predict2 <- predict(CART_class,test, type="class") # classification model  -> CART_class
index<-sort(sample(nrow(bc),round(.25*nrow(bc))))
training<-bc[-index,]
test<-bc[index,]
CART_class<-rpart(Class~.,data=training)
rpart.plot(CART_class) # we get different plot everytime, because random sample is taken
CART_predict2 <- predict(CART_class,test, type="class") # classification model  -> CART_class
table(Actual=test[,11],CART=CART_predict2)
CART_predict<-predict(CART_class,test) # probability of survival or not survival
CART_predict <-predict(CART_class,test)
str(CART_predict)
CART_predict_cat<-ifelse(CART_predict[,2]<=.5,'2','4')
table(Actual=test[,11],CART=CART_predict_cat)
CART_wrong<-sum(test[,11]!=CART_predict_cat) # number of incorrectly classified
CART_error_rate<-CART_wrong/length(test[,11])
CART_error_rate
CART_predict2<-predict(CART_class,test, type="class")
CART_wrong2<-sum(test[,11]!=CART_predict2)
CART_error_rate2<-CART_wrong2/length(test[,11])
CART_error_rate2
library(rpart.plot)
prp(CART_class)
fancyRpartPlot(CART_class)
rm(list=ls())
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
filename<-file.choose()
bc <-  read.csv(filename ,  stringsAsFactors=TRUE)
attach(bc)
set.seed(111) # sets the random sample sequence
# 25% test data , remaining as test data
index<-sort(sample(nrow(bc),round(.25*nrow(bc))))
training<-bc[-index,]
test<-bc[index,]
bc$F1 = factor(bc$F1)
bc$F2 = factor(bc$F2)
bc$F3 = factor(bc$F3)
bc$F4 = factor(bc$F4)
bc$F5 = factor(bc$F5)
bc$F6 = factor(bc$F6)
bc$F7 = factor(bc$F7)
bc$F8 = factor(bc$F8)
bc$F9 = factor(bc$F9)
bc$Class = factor(bc$Class)
rm(list=ls())
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
filename<-file.choose()
bc <-  read.csv(filename ,  stringsAsFactors=TRUE)
View(bc)
attach(bc)
set.seed(111) # sets the random sample sequence
bc$F1 = factor(bc$F1)
bc$F2 = factor(bc$F2)
bc$F3 = factor(bc$F3)
bc$F4 = factor(bc$F4)
bc$F5 = factor(bc$F5)
bc$F6 = factor(bc$F6)
bc$F7 = factor(bc$F7)
bc$F8 = factor(bc$F8)
bc$F9 = factor(bc$F9)
bc$Class = factor(bc$Class)
# 25% test data , remaining as test data
index<-sort(sample(nrow(bc),round(.25*nrow(bc))))
training<-bc[-index,]
test<-bc[index,]
CART_class<-rpart(Class~.,data=training)
rpart.plot(CART_class)
CART_predict2 <- predict(CART_class,test, type="class")
table(Actual=test[,11],CART=CART_predict2)
CART_predict<-predict(CART_class,test)
CART_predict <-predict(CART_class,test)
str(CART_predict)
CART_predict_cat<-ifelse(CART_predict[,2]<=.5,'2','4')
table(Actual=test[,11],CART=CART_predict_cat)
CART_wrong<-sum(test[,11]!=CART_predict_cat)
CART_error_rate<-CART_wrong/length(test[,11])
CART_error_rate
CART_predict2<-predict(CART_class,test, type="class")
CART_wrong2<-sum(test[,11]!=CART_predict2)
CART_error_rate2<-CART_wrong2/length(test[,11])
CART_error_rate2
library(rpart.plot)
prp(CART_class)
fancyRpartPlot(CART_class)
rm(list=ls())
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
filename<-file.choose()
bc <-  read.csv(filename ,  stringsAsFactors=TRUE)
View(bc)
attach(bc)
dev.off()
set.seed(111) # sets the random sample sequence
bc$F1 = factor(bc$F1)
bc$F2 = factor(bc$F2)
bc$F3 = factor(bc$F3)
bc$F4 = factor(bc$F4)
bc$F5 = factor(bc$F5)
bc$F6 = factor(bc$F6)
bc$F7 = factor(bc$F7)
bc$F8 = factor(bc$F8)
bc$F9 = factor(bc$F9)
bc$Class = factor(bc$Class)
# 25% test data , remaining as test data
index<-sort(sample(nrow(bc),round(.25*nrow(bc))))
training<-bc[-index,]
test<-bc[index,]
CART_class<-rpart(Class~.,data=training)
rpart.plot(CART_class)
CART_predict2 <- predict(CART_class,test, type="class")
table(Actual=test[,11],CART=CART_predict2)
View(bc)
rm(list=ls())
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
filename<-file.choose()
bc <-  read.csv(filename ,  stringsAsFactors=TRUE)
View(bc)
attach(bc)
dev.off()
bc <- na.omit(bc)
set.seed(111) # sets the random sample sequence
bc$F1 = factor(bc$F1)
bc$F2 = factor(bc$F2)
bc$F3 = factor(bc$F3)
bc$F4 = factor(bc$F4)
bc$F5 = factor(bc$F5)
bc$F6 = factor(bc$F6)
bc$F7 = factor(bc$F7)
bc$F8 = factor(bc$F8)
bc$F9 = factor(bc$F9)
bc$Class = factor(bc$Class)
# 25% test data , remaining as test data
index<-sort(sample(nrow(bc),round(.25*nrow(bc))))
training<-bc[-index,]
test<-bc[index,]
CART_class<-rpart(Class~.,data=training)
rpart.plot(CART_class)
CART_predict2 <- predict(CART_class,test, type="class")
table(Actual=test[,11],CART=CART_predict2)
CART_predict<-predict(CART_class,test)
CART_predict <-predict(CART_class,test)
str(CART_predict)
CART_predict_cat<-ifelse(CART_predict[,2]<=.5,'2','4')
table(Actual=test[,11],CART=CART_predict_cat)
CART_wrong<-sum(test[,11]!=CART_predict_cat)
CART_error_rate<-CART_wrong/length(test[,11])
CART_error_rate
CART_predict2<-predict(CART_class,test, type="class")
CART_wrong2<-sum(test[,11]!=CART_predict2)
CART_error_rate2<-CART_wrong2/length(test[,11])
CART_error_rate2
library(rpart.plot)
prp(CART_class)
fancyRpartPlot(CART_class)
View(bc$F6)
rm(list=ls())
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
filename<-file.choose()
bc <-  read.csv(filename , na.strings = "?" , stringsAsFactors=TRUE)
View(bc)
attach(bc)
dev.off()
bc <- na.omit(bc)
set.seed(111) # sets the random sample sequence
bc$F1 = factor(bc$F1)
bc$F2 = factor(bc$F2)
bc$F3 = factor(bc$F3)
bc$F4 = factor(bc$F4)
bc$F5 = factor(bc$F5)
bc$F6 = factor(bc$F6)
bc$F7 = factor(bc$F7)
bc$F8 = factor(bc$F8)
bc$F9 = factor(bc$F9)
bc$Class = factor(bc$Class)
View(bc$F6)
# 25% test data , remaining as test data
index<-sort(sample(nrow(bc),round(.25*nrow(bc))))
training<-bc[-index,]
test<-bc[index,]
CART_class<-rpart(Class~.,data=training)
rpart.plot(CART_class)
CART_predict2 <- predict(CART_class,test, type="class")
table(Actual=test[,11],CART=CART_predict2)
CART_predict<-predict(CART_class,test)
CART_predict <-predict(CART_class,test)
str(CART_predict)
CART_predict_cat<-ifelse(CART_predict[,2]<=.5,'2','4')
table(Actual=test[,11],CART=CART_predict_cat)
CART_wrong<-sum(test[,11]!=CART_predict_cat)
CART_error_rate<-CART_wrong/length(test[,11])
CART_error_rate
CART_predict2<-predict(CART_class,test, type="class")
CART_wrong2<-sum(test[,11]!=CART_predict2)
CART_error_rate2<-CART_wrong2/length(test[,11])
CART_error_rate2
library(rpart.plot)
prp(CART_class)
fancyRpartPlot(CART_class)
View(bc$F6)
rm(list=ls())
file<-file.choose()
bc <- read.csv(file)
# install.packages('randomForest')
library(randomForest)
set.seed(123)
bc_clean <- na.omit(bc)
bc_clean <- bc_clean[2:11]
set.seed(111)
# factorizing all the columns
#bc_clean$Sample = factor(bc_clean$Sample)
bc_clean$F1 = factor(bc_clean$F1)
bc_clean$F2 = factor(bc_clean$F2)
bc_clean$F3 = factor(bc_clean$F3)
bc_clean$F4 = factor(bc_clean$F4)
bc_clean$F5 = factor(bc_clean$F5)
bc_clean$F6 = factor(bc_clean$F6)
bc_clean$F7 = factor(bc_clean$F7)
bc_clean$F8 = factor(bc_clean$F8)
bc_clean$F9 = factor(bc_clean$F9)
bc_clean$Class = factor(bc_clean$Class)
index <- sort(sample(nrow(bc_clean),round(.30*nrow(bc_clean))))
training <- bc_clean[-index,]
test <- bc_clean[index,]
fit <- randomForest(Class~., data=training, importance=TRUE, ntree=1000)
importance(fit)
varImpPlot(fit)
Prediction <- predict(fit, test)
table(actual=test[,10],Prediction)
wrong<- (test[,10]!=Prediction )
error_rate<-sum(wrong)/length(wrong)
error_rate
rm(list=ls())
