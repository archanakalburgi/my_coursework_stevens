,     	radius_mean =mmnorm2(	bc_raw$radius_mean)
,      texture_mean=mmnorm2(bc_raw$texture_mean)
,      perimeter_mean=mmnorm2(bc_raw$perimeter_mean)
,      area_mean=mmnorm2(bc_raw$area_mean)
,      smoothness_mean=mmnorm2(bc_raw$smoothness_mean)
,      compactness_mean=mmnorm2(bc_raw$compactness_mean)
,      concavity_mean=mmnorm2(bc_raw$concavity_mean)
,      concave.points_mean=mmnorm2(bc_raw$concave.points_mean)
,      symmetry_mean=mmnorm2(bc_raw$symmetry_mean)
,      fractal_dimension_mean=mmnorm2(bc_raw$fractal_dimension_mean)
,      radius_se=mmnorm2(bc_raw$radius_se)
,      perimeter_se=mmnorm2(bc_raw$perimeter_se)
,      texture_se=mmnorm2(bc_raw$texture_se)
,      area_se=mmnorm2(bc_raw$area_se)
,      smoothness_se=mmnorm2(bc_raw$smoothness_se)
,      compactness_se=mmnorm2(bc_raw$compactness_se)
,      concavity_se=mmnorm2(bc_raw$concavity_se)
,      concave.points_se =mmnorm2(bc_raw$concave.points_se)
,      symmetry_se=mmnorm2(bc_raw$symmetry_se)
,       fractal_dimension_se=mmnorm2(bc_raw$fractal_dimension_se)
,       radius_worst=mmnorm2(bc_raw$radius_worst)
,       texture_worst=mmnorm2(bc_raw$texture_worst)
,       perimeter_worst=mmnorm2(bc_raw$perimeter_worst)
,       area_worst=mmnorm2(bc_raw$area_worst)
,       smoothness_worst=mmnorm2(bc_raw$smoothness_worst)
,       compactness_worst=mmnorm2(bc_raw$compactness_worst)
,       concavity_worst=mmnorm2(bc_raw$concavity_worst)
,       concave.points_worst=mmnorm2(bc_raw$concave.points_worst)
,      	symmetry_worst=mmnorm2(bc_raw$symmetry_worst)
,       fractal_dimension_worst=mmnorm2(bc_raw$fractal_dimension_worst)
)
bc[,c(-1,-2)]
bc[,c(3,4)]
bc[,c(3:6)]
remove(list=ls())
# file <-file.choose()
zip_codes <-  read.csv("/Users/archanakalburgi/Downloads/NYNJ_zipcode.csv")
table(zip_codes$STATE)
nmnorm <-function(x)
{z<-((x-min(x))/(max(x)-min(x)))
return(z)
}
myvector<-1:20
nmnorm(myvector)
zips = data.frame(STATEFIPS = as.character(zip_codes$STATEFIPS)
, STATE =   as.factor(zip_codes$STATE)
, zipcodes = nmnorm(zip_codes$zipcode)
, Returns_pct1 = nmnorm(zip_codes$Returns_pct1)
, Returns_pct2 = nmnorm(zip_codes$Returns_pct2)
, Returns_pct3 = nmnorm(zip_codes$Returns_pct3)
, Returns_pct4 = nmnorm(zip_codes$Returns_pct4)
, Returns_pct5 = nmnorm(zip_codes$Returns_pct5)
, Returns_pct6 = nmnorm(zip_codes$Returns_pct6)
, total = nmnorm(zip_codes$Returns_pct6))
zips_dist<-dist(zips[,c(4:9)])
zips_dist
hclust_results<-hclust(zips_dist)
plot(hclust_results)
hclust2 <- cutree(hclust_results, 4)
plot(hclust2)
table(Cluster = hclust2, Actual = zips[,2])
dev.off()
rm(list=ls())
file<-file.choose()
bc_raw<-  read.csv(file)
summary(bc_raw)
summary(bc_raw$diagnosis)
table(bc_raw$diagnosis)
#mmnorm <-function(x,minx,maxx)
#{z<-((x-minx)/(maxx-minx))
#return(z)
#}
mmnorm2 <-function(x)
{z<-((x-min(x))/(max(x)-min(x)))
return(z)
}
myvector<-1:20
mmnorm2(myvector)
bc<- data.frame(id=as.character(bc_raw$id)
,diagnosis=as.factor(bc_raw$diagnosis)
,     	radius_mean =mmnorm2(	bc_raw$radius_mean)
,      texture_mean=mmnorm2(bc_raw$texture_mean)
,      perimeter_mean=mmnorm2(bc_raw$perimeter_mean)
,      area_mean=mmnorm2(bc_raw$area_mean)
,      smoothness_mean=mmnorm2(bc_raw$smoothness_mean)
,      compactness_mean=mmnorm2(bc_raw$compactness_mean)
,      concavity_mean=mmnorm2(bc_raw$concavity_mean)
,      concave.points_mean=mmnorm2(bc_raw$concave.points_mean)
,      symmetry_mean=mmnorm2(bc_raw$symmetry_mean)
,      fractal_dimension_mean=mmnorm2(bc_raw$fractal_dimension_mean)
,      radius_se=mmnorm2(bc_raw$radius_se)
,      perimeter_se=mmnorm2(bc_raw$perimeter_se)
,      texture_se=mmnorm2(bc_raw$texture_se)
,      area_se=mmnorm2(bc_raw$area_se)
,      smoothness_se=mmnorm2(bc_raw$smoothness_se)
,      compactness_se=mmnorm2(bc_raw$compactness_se)
,      concavity_se=mmnorm2(bc_raw$concavity_se)
,      concave.points_se =mmnorm2(bc_raw$concave.points_se)
,      symmetry_se=mmnorm2(bc_raw$symmetry_se)
,       fractal_dimension_se=mmnorm2(bc_raw$fractal_dimension_se)
,       radius_worst=mmnorm2(bc_raw$radius_worst)
,       texture_worst=mmnorm2(bc_raw$texture_worst)
,       perimeter_worst=mmnorm2(bc_raw$perimeter_worst)
,       area_worst=mmnorm2(bc_raw$area_worst)
,       smoothness_worst=mmnorm2(bc_raw$smoothness_worst)
,       compactness_worst=mmnorm2(bc_raw$compactness_worst)
,       concavity_worst=mmnorm2(bc_raw$concavity_worst)
,       concave.points_worst=mmnorm2(bc_raw$concave.points_worst)
,      	symmetry_worst=mmnorm2(bc_raw$symmetry_worst)
,       fractal_dimension_worst=mmnorm2(bc_raw$fractal_dimension_worst)
)
?dist()
bc_dist<-dist(bc[,c(-1,-2)]) # features
hclust_resutls<-hclust(bc_dist )
plot(hclust_resutls)
hclust_2<-cutree(hclust_resutls,2) # number of clusters
plot(hclust_2)
table(Cluster=hclust_2,Actual=bc[,2]) # bc[,2] class column
dev.off()
?kmeans
zips = filter(STATE == "NY" )
zips = filter(zips[STATE] == "NY" )
bc_test = filter(bc$diagnosis == "M")
bc_test = filter(bc[diagnosis] == "M")
bc_test = filter(bc["diagnosis"] == "M")
bc_test = filter(bc[,c(2)] == "M")
bc %>% filter(diagnosis == "M")
bc <- filter(diagnosis == "M")
bc2 <- bc %>% select(diagnosis)
remove(list=ls())
# file <-file.choose()
zip_codes <-  read.csv("/Users/archanakalburgi/Downloads/NYNJ_zipcode.csv")
table(zip_codes$STATE)
nmnorm <-function(x)
{z<-((x-min(x))/(max(x)-min(x)))
return(z)
}
myvector<-1:20
nmnorm(myvector)
zips = data.frame(STATEFIPS = as.character(zip_codes$STATEFIPS)
, STATE =   as.factor(zip_codes$STATE)
, zipcodes = nmnorm(zip_codes$zipcode)
, Returns_pct1 = nmnorm(zip_codes$Returns_pct1)
, Returns_pct2 = nmnorm(zip_codes$Returns_pct2)
, Returns_pct3 = nmnorm(zip_codes$Returns_pct3)
, Returns_pct4 = nmnorm(zip_codes$Returns_pct4)
, Returns_pct5 = nmnorm(zip_codes$Returns_pct5)
, Returns_pct6 = nmnorm(zip_codes$Returns_pct6)
, total = nmnorm(zip_codes$Returns_pct6))
zips_dist<-dist(zips[,c(4:9)])
hclust_results<-hclust(zips_dist)
plot(hclust_results)
hclust2 <- cutree(hclust_results, 4)
plot(hclust2)
table(Cluster = hclust2, Actual = zips[,2])
dev.off()
table(Cluster = hclust2, Actual = zips[,2])
kmean_clust <- kmeans(bc[,c(4:9)], 4, nstart = 10)
kmean_clust <- kmeans(zips[,c(4:9)], 4, nstart = 10)
kmeans_clust$cluster
kmean_clust$cluster
table(kmeans_clust$cluster, Actual = zips[,2])
table(kmean_clust$cluster, Actual = zips[,2])
rm(list=ls())
file<-file.choose()
bc_raw<-  read.csv(file)
summary(bc_raw)
summary(bc_raw$diagnosis)
table(bc_raw$diagnosis)
#mmnorm <-function(x,minx,maxx)
#{z<-((x-minx)/(maxx-minx))
#return(z)
#}
mmnorm2 <-function(x)
{z<-((x-min(x))/(max(x)-min(x)))
return(z)
}
myvector<-1:20
mmnorm2(myvector)
bc<- data.frame(id=as.character(bc_raw$id)
,diagnosis=as.factor(bc_raw$diagnosis)
,     	radius_mean =mmnorm2(	bc_raw$radius_mean)
,      texture_mean=mmnorm2(bc_raw$texture_mean)
,      perimeter_mean=mmnorm2(bc_raw$perimeter_mean)
,      area_mean=mmnorm2(bc_raw$area_mean)
,      smoothness_mean=mmnorm2(bc_raw$smoothness_mean)
,      compactness_mean=mmnorm2(bc_raw$compactness_mean)
,      concavity_mean=mmnorm2(bc_raw$concavity_mean)
,      concave.points_mean=mmnorm2(bc_raw$concave.points_mean)
,      symmetry_mean=mmnorm2(bc_raw$symmetry_mean)
,      fractal_dimension_mean=mmnorm2(bc_raw$fractal_dimension_mean)
,      radius_se=mmnorm2(bc_raw$radius_se)
,      perimeter_se=mmnorm2(bc_raw$perimeter_se)
,      texture_se=mmnorm2(bc_raw$texture_se)
,      area_se=mmnorm2(bc_raw$area_se)
,      smoothness_se=mmnorm2(bc_raw$smoothness_se)
,      compactness_se=mmnorm2(bc_raw$compactness_se)
,      concavity_se=mmnorm2(bc_raw$concavity_se)
,      concave.points_se =mmnorm2(bc_raw$concave.points_se)
,      symmetry_se=mmnorm2(bc_raw$symmetry_se)
,       fractal_dimension_se=mmnorm2(bc_raw$fractal_dimension_se)
,       radius_worst=mmnorm2(bc_raw$radius_worst)
,       texture_worst=mmnorm2(bc_raw$texture_worst)
,       perimeter_worst=mmnorm2(bc_raw$perimeter_worst)
,       area_worst=mmnorm2(bc_raw$area_worst)
,       smoothness_worst=mmnorm2(bc_raw$smoothness_worst)
,       compactness_worst=mmnorm2(bc_raw$compactness_worst)
,       concavity_worst=mmnorm2(bc_raw$concavity_worst)
,       concave.points_worst=mmnorm2(bc_raw$concave.points_worst)
,      	symmetry_worst=mmnorm2(bc_raw$symmetry_worst)
,       fractal_dimension_worst=mmnorm2(bc_raw$fractal_dimension_worst)
)
bc2 <- bc %>% select(diagnosis)
?dist()
bc_dist<-dist(bc[,c(-1,-2)]) # features
hclust_resutls<-hclust(bc_dist )
plot(hclust_resutls)
?cutree()
hclust_2<-cutree(hclust_resutls,2) # number of clusters
plot(hclust_2)
table(Cluster=hclust_2,Actual=bc[,2]) # bc[,2] class column
dev.off()
?kmeans
kmeans_2<- kmeans(bc[,c(-1,-2)],2,nstart = 10)
kmeans_2$cluster
table(kmeans_2$cluster,Actual=bc[,2] )
rm(list=ls())
file<-file.choose()
bc_raw<-  read.csv(file)
summary(bc_raw)
summary(bc_raw$diagnosis)
table(bc_raw$diagnosis)
#mmnorm <-function(x,minx,maxx)
#{z<-((x-minx)/(maxx-minx))
#return(z)
#}
mmnorm2 <-function(x)
{z<-((x-min(x))/(max(x)-min(x)))
return(z)
}
myvector<-1:20
mmnorm2(myvector)
bc<- data.frame(id=as.character(bc_raw$id)
,diagnosis=as.factor(bc_raw$diagnosis)
,     	radius_mean =mmnorm2(	bc_raw$radius_mean)
,      texture_mean=mmnorm2(bc_raw$texture_mean)
,      perimeter_mean=mmnorm2(bc_raw$perimeter_mean)
,      area_mean=mmnorm2(bc_raw$area_mean)
,      smoothness_mean=mmnorm2(bc_raw$smoothness_mean)
,      compactness_mean=mmnorm2(bc_raw$compactness_mean)
,      concavity_mean=mmnorm2(bc_raw$concavity_mean)
,      concave.points_mean=mmnorm2(bc_raw$concave.points_mean)
,      symmetry_mean=mmnorm2(bc_raw$symmetry_mean)
,      fractal_dimension_mean=mmnorm2(bc_raw$fractal_dimension_mean)
,      radius_se=mmnorm2(bc_raw$radius_se)
,      perimeter_se=mmnorm2(bc_raw$perimeter_se)
,      texture_se=mmnorm2(bc_raw$texture_se)
,      area_se=mmnorm2(bc_raw$area_se)
,      smoothness_se=mmnorm2(bc_raw$smoothness_se)
,      compactness_se=mmnorm2(bc_raw$compactness_se)
,      concavity_se=mmnorm2(bc_raw$concavity_se)
,      concave.points_se =mmnorm2(bc_raw$concave.points_se)
,      symmetry_se=mmnorm2(bc_raw$symmetry_se)
,       fractal_dimension_se=mmnorm2(bc_raw$fractal_dimension_se)
,       radius_worst=mmnorm2(bc_raw$radius_worst)
,       texture_worst=mmnorm2(bc_raw$texture_worst)
,       perimeter_worst=mmnorm2(bc_raw$perimeter_worst)
,       area_worst=mmnorm2(bc_raw$area_worst)
,       smoothness_worst=mmnorm2(bc_raw$smoothness_worst)
,       compactness_worst=mmnorm2(bc_raw$compactness_worst)
,       concavity_worst=mmnorm2(bc_raw$concavity_worst)
,       concave.points_worst=mmnorm2(bc_raw$concave.points_worst)
,      	symmetry_worst=mmnorm2(bc_raw$symmetry_worst)
,       fractal_dimension_worst=mmnorm2(bc_raw$fractal_dimension_worst)
)
?dist()
bc_dist<-dist(bc[,c(-1,-2)]) # features
bc[,c(3:6)]
?hclust()
hclust_resutls<-hclust(bc_dist )
plot(hclust_resutls)
?cutree()
hclust_2<-cutree(hclust_resutls,2) # number of clusters
plot(hclust_2)
table(Cluster=hclust_2,Actual=bc[,2]) # bc[,2] class column
dev.off()
?kmeans
kmeans_2<- kmeans(bc[,c(-1,-2)],2,nstart = 10)
kmeans_2$cluster
table(kmeans_2$cluster,Actual=bc[,2] )
remove(list=ls())
# file <-file.choose()
zip_codes <-  read.csv("/Users/archanakalburgi/Downloads/NYNJ_zipcode.csv")
table(zip_codes$STATE)
nmnorm <-function(x)
{z<-((x-min(x))/(max(x)-min(x)))
return(z)
}
myvector<-1:20
nmnorm(myvector)
zips = data.frame(STATEFIPS = as.character(zip_codes$STATEFIPS)
, STATE =   as.factor(zip_codes$STATE)
, zipcodes = nmnorm(zip_codes$zipcode)
, Returns_pct1 = nmnorm(zip_codes$Returns_pct1)
, Returns_pct2 = nmnorm(zip_codes$Returns_pct2)
, Returns_pct3 = nmnorm(zip_codes$Returns_pct3)
, Returns_pct4 = nmnorm(zip_codes$Returns_pct4)
, Returns_pct5 = nmnorm(zip_codes$Returns_pct5)
, Returns_pct6 = nmnorm(zip_codes$Returns_pct6)
, total = nmnorm(zip_codes$Returns_pct6))
# zips = filter(zips[STATE] == "NY" )
zips_dist<-dist(zips[,c(4:9)])
hclust_results<-hclust(zips_dist)
plot(hclust_results)
hclust2 <- cutree(hclust_results, 4)
plot(hclust2)
table(Cluster = hclust2, Actual = zips[,2])
dev.off()
kmean_clust <- kmeans(zips[,c(4:9)], 4, nstart = 10)
kmean_clust$cluster
table(kmean_clust$cluster, Actual = zips[,2])
View(zip_codes)
View(zip_codes)
remove(list=ls())
# file <-file.choose()
zip_codes <-  read.csv("/Users/archanakalburgi/Downloads/NYNJ_zipcode.csv")
table(zip_codes$STATE)
nmnorm <-function(x)
{z<-((x-min(x))/(max(x)-min(x)))
return(z)
}
myvector<-1:20
nmnorm(myvector)
zips_subset = subset(zips, STATES == "NY")
zips_subset = subset(zip_codes, STATES == "NY")
zip_codes[16:556]
zip_codes[16]
zip_codes[!zip_codes$STATE == "NY"]
STATE =   as.factor(zip_codes$STATE)
zip_codes[!zip_codes$STATE == "NY"]
zip_codes[!zip_codes$STATE == "NY",]
remove(list=ls())
# file <-file.choose()
zip_codes <-  read.csv("/Users/archanakalburgi/Downloads/NYNJ_zipcode.csv")
table(zip_codes$STATE)
nmnorm <-function(x)
{z<-((x-min(x))/(max(x)-min(x)))
return(z)
}
myvector<-1:20
nmnorm(myvector)
zips = data.frame(STATEFIPS = as.character(zip_codes$STATEFIPS)
, STATE =   as.factor(zip_codes$STATE)
, zipcodes = nmnorm(zip_codes$zipcode)
, Returns_pct1 = nmnorm(zip_codes$Returns_pct1)
, Returns_pct2 = nmnorm(zip_codes$Returns_pct2)
, Returns_pct3 = nmnorm(zip_codes$Returns_pct3)
, Returns_pct4 = nmnorm(zip_codes$Returns_pct4)
, Returns_pct5 = nmnorm(zip_codes$Returns_pct5)
, Returns_pct6 = nmnorm(zip_codes$Returns_pct6)
, total = nmnorm(zip_codes$Returns_pct6))
zip_codes[!zip_codes$STATE == "NY",]
zips = zips[!zips$STATE == "NY",]
# Hierarchical clustering (centroid) # zips = filter(zips[STATE] == "NY" )
zips_dist<-dist(zips[,c(4:9)])
hclust_results<-hclust(zips_dist)
plot(hclust_results)
hclust2 <- cutree(hclust_results, 4)
plot(hclust2)
table(Cluster = hclust2, Actual = zips[,2])
remove(list=ls())
# file <-file.choose()
zip_codes <-  read.csv("/Users/archanakalburgi/Downloads/NYNJ_zipcode.csv")
table(zip_codes$STATE)
nmnorm <-function(x)
{z<-((x-min(x))/(max(x)-min(x)))
return(z)
}
myvector<-1:20
nmnorm(myvector)
zips_normal = data.frame(STATEFIPS = as.character(zip_codes$STATEFIPS)
, STATE =   as.factor(zip_codes$STATE)
, zipcodes = nmnorm(zip_codes$zipcode)
, Returns_pct1 = nmnorm(zip_codes$Returns_pct1)
, Returns_pct2 = nmnorm(zip_codes$Returns_pct2)
, Returns_pct3 = nmnorm(zip_codes$Returns_pct3)
, Returns_pct4 = nmnorm(zip_codes$Returns_pct4)
, Returns_pct5 = nmnorm(zip_codes$Returns_pct5)
, Returns_pct6 = nmnorm(zip_codes$Returns_pct6)
, total = nmnorm(zip_codes$Returns_pct6))
zips = zips_normal[!zips_normal$STATE == "NY",]
# Hierarchical clustering (centroid) # zips = filter(zips[STATE] == "NY" )
zips_dist<-dist(zips[,c(4:9)])
hclust_results<-hclust(zips_dist)
plot(hclust_results)
hclust2 <- cutree(hclust_results, 4)
plot(hclust2)
table(Cluster = hclust2, Actual = zips_normal[,2])
table(Cluster = hclust2, Actual = zips[,2])
dev.off()
# K-means, population   (centroid)
kmean_clust <- kmeans(zips[,c(4:9)], 4, nstart = 10)
kmean_clust$cluster
table(kmean_clust$cluster, Actual = zips[,2])
remove(list=ls())
# file <-file.choose()
zip_codes <-  read.csv("/Users/archanakalburgi/Downloads/NYNJ_zipcode.csv")
table(zip_codes$STATE)
nmnorm <-function(x)
{z<-((x-min(x))/(max(x)-min(x)))
return(z)
}
myvector<-1:20
nmnorm(myvector)
zips_normal = data.frame(STATEFIPS = as.character(zip_codes$STATEFIPS)
, STATE =   as.factor(zip_codes$STATE)
, zipcodes = nmnorm(zip_codes$zipcode)
, Returns_pct1 = nmnorm(zip_codes$Returns_pct1)
, Returns_pct2 = nmnorm(zip_codes$Returns_pct2)
, Returns_pct3 = nmnorm(zip_codes$Returns_pct3)
, Returns_pct4 = nmnorm(zip_codes$Returns_pct4)
, Returns_pct5 = nmnorm(zip_codes$Returns_pct5)
, Returns_pct6 = nmnorm(zip_codes$Returns_pct6)
, total = nmnorm(zip_codes$Returns_pct6))
zips = zips_normal[!zips_normal$STATE == "NJ",]
# Hierarchical clustering (centroid) # zips = filter(zips[STATE] == "NY" )
zips_dist<-dist(zips[,c(4:9)])
hclust_results<-hclust(zips_dist)
plot(hclust_results)
hclust2 <- cutree(hclust_results, 4)
plot(hclust2)
table(Cluster = hclust2, Actual = zips[,2])
table(Cluster = hclust2, Actual = zips[,2])
dev.off()
# K-means, population   (centroid)
kmean_clust <- kmeans(zips[,c(4:9)], 4, nstart = 10)
kmean_clust$cluster
table(kmean_clust$cluster, Actual = zips[,2])
remove(list=ls())
# file <-file.choose()
zip_codes <-  read.csv("/Users/archanakalburgi/Downloads/NYNJ_zipcode.csv")
table(zip_codes$STATE)
nmnorm <-function(x)
{z<-((x-min(x))/(max(x)-min(x)))
return(z)
}
myvector<-1:20
nmnorm(myvector)
zips_normal = data.frame(STATEFIPS = as.character(zip_codes$STATEFIPS)
, STATE =   as.factor(zip_codes$STATE)
, zipcodes = nmnorm(zip_codes$zipcode)
, Returns_pct1 = nmnorm(zip_codes$Returns_pct1)
, Returns_pct2 = nmnorm(zip_codes$Returns_pct2)
, Returns_pct3 = nmnorm(zip_codes$Returns_pct3)
, Returns_pct4 = nmnorm(zip_codes$Returns_pct4)
, Returns_pct5 = nmnorm(zip_codes$Returns_pct5)
, Returns_pct6 = nmnorm(zip_codes$Returns_pct6)
, total = nmnorm(zip_codes$Returns_pct6))
zips = zips_normal[!zips_normal$STATE == "NJ",]
# Hierarchical clustering (centroid) # zips = filter(zips[STATE] == "NY" )
zips_dist<-dist(zips[,c(4:9)])
hclust_results<-hclust(zips_dist)
plot(hclust_results)
hclust2 <- cutree(hclust_results, 4)
plot(hclust2)
table(Cluster = hclust2, Actual = zips[,2])
dev.off()
# K-means, population   (centroid)
kmean_clust <- kmeans(zips[,c(4:9)], 4, nstart = 10)
kmean_clust$cluster
table(kmean_clust$cluster, Actual = zips[,2])
table(H-clust = hclust2, K-means = kmean_clust$cluster)
table(H-clust = hclust2[,2], K-means = kmean_clust$cluster[,2])
table(hclust2[,2], kmean_clust$cluster[,2])
table(hclust2, kmean_clust$cluster)
remove(list=ls())
# file <-file.choose()
zip_codes <-  read.csv("/Users/archanakalburgi/Downloads/NYNJ_zipcode.csv")
# View(zip_codes)
table(zip_codes$STATE)
# Normalize all columns
nmnorm <-function(x)
{z<-((x-min(x))/(max(x)-min(x)))
return(z)
}
myvector<-1:20
nmnorm(myvector)
zips_normal = data.frame(STATEFIPS = as.character(zip_codes$STATEFIPS)
, STATE =   as.factor(zip_codes$STATE)
, zipcodes = nmnorm(zip_codes$zipcode)
, Returns_pct1 = nmnorm(zip_codes$Returns_pct1)
, Returns_pct2 = nmnorm(zip_codes$Returns_pct2)
, Returns_pct3 = nmnorm(zip_codes$Returns_pct3)
, Returns_pct4 = nmnorm(zip_codes$Returns_pct4)
, Returns_pct5 = nmnorm(zip_codes$Returns_pct5)
, Returns_pct6 = nmnorm(zip_codes$Returns_pct6)
, total = nmnorm(zip_codes$Returns_pct6))
# Remove rows with STATE = NJ to consider rows only with STATE = NY
zips = zips_normal[!zips_normal$STATE == "NJ",]
# Hierarchical clustering (centroid) -> 4 clusters
zips_dist<-dist(zips[,c(4:9)])
hclust_results<-hclust(zips_dist)
plot(hclust_results)
# cut tree
hclust2 <- cutree(hclust_results, 4)
plot(hclust2)
table(Cluster = hclust2, Actual = zips[,2])
dev.off()
# K-means, population (centroid) -> 4 clusters
kmean_clust <- kmeans(zips[,c(4:9)], 4, nstart = 10)
kmean_clust$cluster
table(kmean_clust$cluster, Actual = zips[,2])
